'use strict';(function(){const indexCfg={cache:true};indexCfg.doc={id:'id',field:['title','content'],store:['title','href'],};const index=FlexSearch.create('balance',indexCfg);window.bookSearchIndex=index;index.add({'id':0,'href':'/posts/','title':"Posts",'content':""});index.add({'id':1,'href':'/posts/rsync/','title':"Usage of the command `rsync`",'content':"Intro #  rsync 命令可用来在本地和远程机器之间同步目录。\nrsync -a host:dirA dirB Options #   -a, \u0026ndash;archive 等价于 -rlptgoD -r, \u0026ndash;recursive 递归同步目录中的内容 -l, \u0026ndash;links copy symlinks as symlinks -p, \u0026ndash;perms preserve permissions -t, \u0026ndash;times preserver modification times -g, \u0026ndash;group preserver group -o, \u0026ndash;owner preserver owner (super-user only) -D same as \u0026ndash;devices \u0026ndash;specials \u0026ndash;devices preserver device files \u0026ndash;specials preserver special files -P, \u0026ndash;progress show progress during transfer  注意 #  rsync -a remote_host:/source/dirA /local/dirB 上述命令会将远程机器的 dirA 目录拷贝到本地的 dirB 目录下，执行完成之后，本地 的目录下将出现一个 dirA 目录，内容与远程机器的 dirA 目录相同。\nrsync -a remote_host:/source/dirA/ /local/dirB 上述命令会将远程机器的 dirA 目录中的内容拷贝到本地的 dirB 目录下，在本地 dirB 目录下不会自动创建 dirA 目录。\n"});index.add({'id':2,'href':'/posts/hello-world/','title':"Hello World",'content':"Hello World #  #include \u0026lt;stdio.h\u0026gt; int main(int argc, char* argv[]) { printf(\u0026#34;hello, hugo\\n\u0026#34;); return 0; } "});})();